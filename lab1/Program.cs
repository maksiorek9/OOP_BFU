using lab1;
/*Лабораторная работа 1 (углы)

Создать класс Angle для хранения углов
 - хранить внутреннее состоние угла в радианах
 - возможность создания угла в радианах и градусах
 - реализовать присваивание и получение угла в раддианах и градусах
 - реализовать сранение углов с учетом, что 2 Pi*N + x = x, где Pi=3.14.1529..., N-целое 
 - релизовать перобразование угла в строку, float, int, str
 - реализовать сравнение углов
 - реализовать сложение (в том числе с float и int, считая, что они заданы в радианах), вычитание (считая, что они заданы в радианах), умножение и деление на число
 - реализовать строкове представление объекта (str, repr)  

Создать класс AngleRange для хранения промежтка для углов
 - Реализовать механизм создания объекта через задание начальной и конечной точки промежукта в виде углов float, int или Angle
 - Предусмотреть возможность использования включающих и исключающих промежутков
 - реализовать возможность сравнения объектов на эквивалентность (eq)
 - реализовать строкове представление объекта (str, repr)  
 - реализовать получение длины промежутка (abs или отдельны метод)
 - реализовать сравнение промежутков
 - реализовать операцию in для проверки входит один промежуток в другой или угол в промежуток
 - реализовать операции сложения, вычитания  (результат в общем виде - список промежутков)

Продемонстировать работоспособность реализованных методов*/
internal class Program
{
    public static void Main(string[] args)
    {
        var ang = new Angel(degrees:40);
        
        
        
        Console.WriteLine("ang.degrees = " + ang.str_angel.GetType());
        Console.WriteLine(ang.radian);
    }
}